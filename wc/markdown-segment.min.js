"use strict";{const inputTypes={SINGLE_LINE:0,MULTI_LINE:1,NO_INPUT:2,SPECIAL:3,DELETE:4},segmentOptions=[{value:"<webui-page-segment>\n\n{}\n\n</webui-page-segment>",display:"segment",inputType:inputTypes.MULTI_LINE},{value:"# {}",display:"h1",inputType:inputTypes.SINGLE_LINE},{value:"## {}",display:"h2",inputType:inputTypes.SINGLE_LINE},{value:"### {}",display:"h3",inputType:inputTypes.SINGLE_LINE},{value:"#### {}",display:"h4",inputType:inputTypes.SINGLE_LINE},{value:"##### {}",display:"h5",inputType:inputTypes.SINGLE_LINE},{value:"###### {}",display:"h6",inputType:inputTypes.SINGLE_LINE},{value:"<webui-line></webui-line>",display:"Line Break",inputType:inputTypes.NO_INPUT},{value:"***DELETING CONTENT***",display:"Delete Segment",inputType:inputTypes.DELETE},{value:"{}",display:"Raw",inputType:inputTypes.MULTI_LINE}];function getOption(value){for(let option of segmentOptions)if(option.value===value)return option;return segmentOptions.slice(-1)}webui.define("app-markdown-segment",{linkCss:!0,constructor:t=>{t._content=t.template.querySelector("webui-content"),t._btnEdit=t.template.querySelector("aside webui-button"),t._inputMessage=t.template.querySelector("webui-input-message"),t._inputText=t.template.querySelector("webui-input-text"),t._options=t.template.querySelector("webui-dropdown"),t._inputOptions=t.template.querySelector(".input-options"),t._isEditing=!1,t._inputValue="",t._currentOption=segmentOptions.slice(-1).value,t._inputType=segmentOptions.slice(-1).inputType},attr:[],attrChanged:(t,property,value)=>{property},buildFinalMarkdown:function(){let t=this;switch(console.log("build final markdown $o |%o|%o|%o|",t._inputType,t._inputValue,t._inputMessage.value,t._inputText.value),t._inputType){case inputTypes.MULTI_LINE:t._inputValue=t._inputMessage.value;break;case inputTypes.SINGLE_LINE:t._inputValue=t._inputText.value;break;default:return console.log("return raw option value",t._currentOption),t._currentOption}return console.log("return with replace"),t._currentOption.replace("{}",t._inputValue)},connected:function(t){if(t._skipReconnect)return;let md=t.dataset.markdown;t.setMarkdown(md||""),t._inputMessage.addEventListener("input",(ev=>{let markdown=t.buildFinalMarkdown();t.setMarkdown(markdown)})),t._inputText.addEventListener("input",(ev=>{let markdown=t.buildFinalMarkdown();t.setMarkdown(markdown)})),t._btnEdit.addEventListener("click",(_=>{t._isEditing=!t._isEditing,t._isEditing?(t.classList.add("isEditing"),t._inputType===inputTypes.MULTI_LINE&&t._inputMessage.autosize()):t.classList.remove("isEditing")})),t._options.setOptions(segmentOptions),t._options.addEventListener("change",(ev=>{if(t._currentOption!==t._options.value){t._currentOption=t._options.value,t.setInputType(getOption(t._currentOption).inputType);let markdown=t.buildFinalMarkdown();t.setMarkdown(markdown)}}))},disconnected:function(t){t._skipReconnect=!0},setInputType:function(inputType){let t=this;switch(t._inputType=inputType,inputType){case inputTypes.MULTI_LINE:t._inputMessage.value=t._inputValue,t._inputOptions.classList.remove("it-single"),t._inputOptions.classList.add("it-multi");break;case inputTypes.SINGLE_LINE:t._inputText.value=t._inputValue,t._inputOptions.classList.remove("it-multi"),t._inputOptions.classList.add("it-single");break;default:t._inputOptions.classList.remove("it-multi"),t._inputOptions.classList.remove("it-single")}},setMarkdown:function(markdown){let t=this;console.log("set markdown",markdown),t._markdown=markdown;let foundMatch=!1;switch(segmentOptions.forEach((option=>{if(foundMatch)return;if(-1===option.value.indexOf("{}"))return void(markdown===option.value&&(console.log("found match",option),foundMatch=!0,t.setInputType(option.inputType),t._currentOption=option.value,t.setOption()));let[left,right]=option.value.split("{}");markdown.startsWith(left)&&markdown.endsWith(right)&&(foundMatch=!0,console.log("found match",option),t.setInputType(option.inputType),t._currentOption=option.value,t._inputValue=markdown.substring(left.length,markdown.length-right.length),t.setOption())})),foundMatch||(t.setInputType(inputTypes.NO_INPUT),webui.log.warn("markdown-segment did not find match",markdown)),t._inputType){case inputTypes.MULTI_LINE:t._inputValue!==t._inputMessage.value&&(t._inputMessage.value=t._inputValue);break;case inputTypes.SINGLE_LINE:t._inputValue!==t._inputText.value&&(t._inputText.value=t._inputValue)}t.render()},setOption:function(){let t=this;t._options.value!==t._currentOption&&(t._options.value=t._currentOption),t._options.value!==t._currentOption&&(webui.log.warn("option failed to set %o",t._currentOption),setTimeout((()=>{t.setOption()}),100))},getMarkdown:function(){return this._inputType===inputTypes.DELETE?null:this._markdown},render:function(){let t=this;if(t._content.setHtml)if(t._content.setHtml(""),t._inputType===inputTypes.SPECIAL)t._content.setHtml("TODO: Implement Special Displays");else t._content.setHtml(webui.applyAppDataToContent(t._markdown));else setTimeout((()=>t.render()),100)},shadowTemplate:'\n<style type="text/css">\n:host {\ndisplay:grid;\ngrid-template-columns:1fr max-content;\nalign-items:start;\nposition: relative;\n}\naside {\nvisibility:hidden;\n}\n:host(:hover) aside {\ndisplay:flex;\nflex-direction:column;\nvisibility:visible;\n}\n:host div.content {\nposition:relative;\n}\n:host div.input {\ndisplay:grid;\nalign-items:start;\ngrid-template-columns:1fr max-content;\nposition:absolute;\nwidth:100%;\nmin-height:100%;\nz-index:1;\ntop:0;\nleft:0;\n}\n:host(:not(.isEditing)) div.input {\ndisplay:none;\n}\n.input-options:not(.it-single) > webui-input-text,\n.input-options:not(.it-multi) > webui-input-message {\ndisplay:none;\n}\n</style>\n<div class="content">\n<webui-content></webui-content>\n<div class="input">\n<div class="input-options">\n<webui-input-text></webui-input-text>\n<webui-input-message></webui-input-message>\n</div>\n<webui-dropdown></webui-dropdown>\n</div>\n</div>\n<aside>\n<webui-button class="drag-handle" title="Click to edit, drag to move" start-icon="edit" theme="info"></webui-button>\n</aside>\n'})}
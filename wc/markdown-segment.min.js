"use strict";{const segmentOptions=[{value:"<webui-page-segment>\n\n{}\n\n</webui-page-segment>",display:"segment"},{value:"# {}",display:"h1"},{value:"## {}",display:"h2"},{value:"### {}",display:"h3"},{value:"#### {}",display:"h4"},{value:"##### {}",display:"h5"},{value:"###### {}",display:"h6"},{value:"{}",display:"Raw"}];webui.define("app-markdown-segment",{linkCss:!0,constructor:t=>{t._content=t.template.querySelector("webui-content"),t._btnEdit=t.template.querySelector("aside webui-button"),t._input=t.template.querySelector("webui-input-message"),t._options=t.template.querySelector("webui-dropdown"),t._isEditing=!1,t._inputValue="",t._currentOption=segmentOptions[0].value},attr:["example"],attrChanged:(t,property,value)=>{property},buildFinalMarkdown:function(input){return this._inputValue=input,this._currentOption.replace("{}",input)},connected:function(t){let md=t.dataset.markdown;t.setMarkdown(md||""),t._input.addEventListener("input",(ev=>{t._inputValue=t._input.value;let markdown=t.buildFinalMarkdown(t._inputValue);t.setMarkdown(markdown)})),t._btnEdit.addEventListener("click",(_=>{t._isEditing=!t._isEditing,t._isEditing?(t.classList.add("isEditing"),t._input.autosize()):t.classList.remove("isEditing")})),t._options.setOptions(segmentOptions),t._options.addEventListener("change",(ev=>{if(console.log("options changed",ev,t._options.value),t._currentOption!==t._options.value){t._currentOption=t._options.value;let markdown=t.buildFinalMarkdown(t._input.value);t.setMarkdown(markdown)}}))},disconnected:function(t){},setMarkdown:function(markdown){let t=this;t._markdown=markdown;let foundMatch=!1;console.log("Setting markdown",markdown),segmentOptions.forEach((option=>{if(foundMatch)return;let[left,right]=option.value.split("{}");markdown.startsWith(left)&&markdown.endsWith(right)&&(foundMatch=!0,t._currentOption=option.value,t._inputValue=markdown.substring(left.length,markdown.length-right.length),console.log("found match",option,t._currentOption,t._options,t._options.value),console.log("input value",t._inputValue),t.setOption())})),foundMatch||webui.log.warn("markdown-segment did not find match",markdown),t._inputValue!==t._input.value&&(t._input.value=t._inputValue),t.render()},setOption:function(){let t=this;console.log("set option %o",t._options.value,t._currentOption),t._options.value!==t._currentOption&&(console.log("is connected",t._options._isConnected,!t._options._optionsSet),t._options.value=t._currentOption,console.log("set match",t._options.value)),t._options.value!==t._currentOption&&(webui.log.warn("option failed to set %o",t._currentOption),setTimeout((()=>{t.setOption()}),100))},getMarkdown:function(){return this._markdown},render:function(){let t=this;if(t._content.setHtml(""),"wrap"===t.getAttribute("mdt"));else t._content.setHtml(webui.applyAppDataToContent(t._markdown))},shadowTemplate:'\n<style type="text/css">\n:host {\ndisplay:grid;\ngrid-template-columns:1fr max-content;\nalign-items:start;\nposition: relative;\n}\naside {\nvisibility:hidden;\n}\n:host(:hover) aside {\ndisplay:flex;\nflex-direction:column;\nvisibility:visible;\n}\n:host div.content {\nposition:relative;\n}\n:host div.input {\ndisplay:grid;\nalign-items:start;\ngrid-template-columns:1fr max-content;\nposition:absolute;\nwidth:100%;\nmin-height:100%;\nz-index:1;\ntop:0;\nleft:0;\n}\n:host(:not(.isEditing)) div.input {\ndisplay:none;\n}\n</style>\n<div class="content">\n<webui-content></webui-content>\n<div class="input">\n<webui-input-message></webui-input-message>\n<webui-dropdown></webui-dropdown>\n</div>\n</div>\n<aside>\n<webui-button start-icon="edit" theme="info"></webui-button>\n</aside>\n'})}
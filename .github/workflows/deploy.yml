name: 'Build and Publish'

on:
  push:
    branches:
      - main

env:
  VERSION: 0.1.9
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build-tauri-windows:
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies
        run: |
          rustup update
          cargo install trunk
          rustup target add wasm32-unknown-unknown
          cargo build --release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
      - name: Save Windows files to artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskproxyartifactswindows
          path: |
            target\release\
  build-tauri-mac:
    if: false
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies
        run: |
          # softwareupdate --install -a
      - name: install frontend dependencies
        run: |
          brew update
          brew install openssl webkitgtk
          rustup update
          cargo install trunk
          rustup target add wasm32-unknown-unknown
          cargo build --release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
      - name: Save Mac files to artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskproxyartifactsmac
          path: |
            target/release/
  build-tauri-ubuntu:
    if: false
    permissions:
      contents: write
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies
        run: |
          sudo apt update
          sudo apt install libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - name: install frontend dependencies
        run: |
          rustup update
          cargo install trunk
          rustup target add wasm32-unknown-unknown
          cargo build --release
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
      - name: Save Ubuntu files to artifact
        uses: actions/upload-artifact@v4
        with:
          name: taskproxyartifactsubuntu
          path: |
            target/release/
  publish-tauri-windows:
    needs: build-tauri-windows
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: taskproxyartifactswindows
      - name: Setup Code Signing Dependencies
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module -Name Az.Accounts
          Install-Module -Name Az.CodeSigning
          Install-Module -Name TrustedSigning
      - name: Code Sign Setup Executables
        run: |
          $root = Resolve-Path "./bundle"
          $EVAS = '${{ secrets.EV_AZURE_SECRET }}'
          $EVAC = '${{ secrets.EV_AZURE_CLIENT }}'
          $EVAT = '${{ secrets.EV_AZURE_TENANT }}'
          $secPassword = ConvertTo-SecureString $EVAS -AsPlainText -Force
          $credential = New-Object System.Management.Automation.PSCredential($EVAC, $secPassword)
          Connect-AzAccount -ServicePrincipal -TenantId $EVAT -Credential $credential
          Invoke-TrustedSigning -Endpoint ${{ secrets.EV_AZURE_ENDPOINT }} -CodeSigningAccountName ${{ secrets.EV_AZURE_ACCOUNT }} -CertificateProfileName ${{ secrets.EV_AZURE_PROFILE }} -FileDigest sha256 -Files $root\bundle\msi\task-proxy_${{ env.VERSION }}_x64_en-US.msi $root\bundle\nsis\task-proxy_${{ env.VERSION }}_x64_setup.exe -TimestampRfc3161 http://timestamp.acs.microsoft.com -TimestampDigest sha256
      - name: SFTP upload
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.CDN_SERVER_DOMAIN }}
          username: ${{ secrets.CDN_SERVER_USER }}
          password: ${{ secrets.CDN_SERVER_PW }}
          port: ${{ secrets.CDN_SERVER_PORT }}
          uploads: |
            ./bundle => ${{ secrets.CDN_APP_PATH }}/task-proxy/win/${{ env.VERSION }}/
  publish-tauri-mac:
    needs: build-tauri-mac
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: taskproxyartifactsmac
      - name: SFTP upload
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.CDN_SERVER_DOMAIN }}
          username: ${{ secrets.CDN_SERVER_USER }}
          password: ${{ secrets.CDN_SERVER_PW }}
          port: ${{ secrets.CDN_SERVER_PORT }}
          uploads: |
            ./bundle => ${{ secrets.CDN_APP_PATH }}/task-proxy/mac/${{ env.VERSION }}/
  publish-tauri-ubuntu:
    needs: build-tauri-ubuntu
    if: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: taskproxyartifactsubuntu
      - name: SFTP upload
        uses: Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.CDN_SERVER_DOMAIN }}
          username: ${{ secrets.CDN_SERVER_USER }}
          password: ${{ secrets.CDN_SERVER_PW }}
          port: ${{ secrets.CDN_SERVER_PORT }}
          uploads: |
            ./bundle => ${{ secrets.CDN_APP_PATH }}/task-proxy/ubu/${{ env.VERSION }}/
  cdn-update-app-catalog-windows:
    runs-on: ubuntu-latest
    needs: publish-tauri-windows
    steps:
    - name: update app catalog
      run: |
        ${{ secrets.WEB_DEPLOY_PREFIX }}cdnapps ${{ secrets.WEB_DEPLOY_POSTFIX }}
  cdn-update-app-catalog-mac:
    runs-on: ubuntu-latest
    needs: publish-tauri-mac
    steps:
    - name: update app catalog
      run: |
        ${{ secrets.WEB_DEPLOY_PREFIX }}cdnapps ${{ secrets.WEB_DEPLOY_POSTFIX }}
  cdn-update-app-catalog-ubuntu:
    runs-on: ubuntu-latest
    needs: publish-tauri-ubuntu
    steps:
    - name: update app catalog
      run: |
        ${{ secrets.WEB_DEPLOY_PREFIX }}cdnapps ${{ secrets.WEB_DEPLOY_POSTFIX }}

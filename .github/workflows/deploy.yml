name: 'Publish'

on:
  push:
    branches:
      - main

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: import windows certificate
        if: matrix.platform == 'windows-latest'
        run: |
          # TODO
      - name: import mac certificate
        if: matrix.platform == 'macos-latest'
        run: |
          # TODO
      - name: import ubuntu certificate
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          # TODO
      - name: install frontend dependencies
        run: |
          cargo install trunk
          rustup target add wasm32-unknown-unknown
          cargo build
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

      - name: Save Windows files to artifact
        uses: actions/upload-artifact@v2
        with:
          name: taskproxyartifacts
          path: |
            target\release\bundle\msi\Task Proxy_0.1.0_x64_en-US.msi
            target\release\bundle\nsis\Task Proxy_0.1.0_x64-setup.exe
      - name: Save Mac files to artifact
        uses: actions/upload-artifact@v2
        with:
          name: taskproxyartifacts
          path: |
            target\release\bundle\msi\Task Proxy_0.1.0_x64_en-US.msi
            target\release\bundle\nsis\Task Proxy_0.1.0_x64-setup.exe
      - name: Save Ubuntu files to artifact
        uses: actions/upload-artifact@v2
        with:
          name: taskproxyartifacts
          path: |
            target\release\bundle\msi\Task Proxy_0.1.0_x64_en-US.msi
            target\release\bundle\nsis\Task Proxy_0.1.0_x64-setup.exe
  publish-tauri:
    needs: build-tauri
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: taskproxyartifacts
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Check scripts
        run: |
          ls
      - name: Copy Binary Files to Azure Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage copy -s 'taskproxyartifacts/Task Proxy_0.1.0_x64_en-US.msi' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
            az storage copy -s 'taskproxyartifacts/Task Proxy_0.1.0_x64-setup.exe' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
            az storage copy -s 'taskproxyartifacts/task-proxy_0.1.0_amd64.deb' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
            az storage copy -s 'taskproxyartifacts/task-proxy_0.1.0_amd64.AppImage' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
            az storage copy -s 'taskproxyartifacts/Task Proxy_0.1.0_x64.dmg' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
            az storage copy -s 'taskproxyartifacts/Task Proxy.app' --account-name ${{ secrets.ACCOUNT_NAME }} --destination-container 'taskproxy' --recursive
      - name: logout
        run: |
          az logout
        if: always()
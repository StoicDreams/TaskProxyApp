"use strict";async function processMessage(run,data){if(!run)return{ok:!1,msg:"Missing run"};let proc=procs[run];if("function"==typeof proc)try{return{ok:!0,msg:await proc(data)}}catch(ex){return console.log("worker proc failed",ex),{ok:!1,msg:ex}}}onmessage=async msg=>{if(!msg.isTrusted)return;let data=JSON.parse(msg.data),result=await processMessage(data.run,data.data),response={id:data.id,message:result};postMessage(JSON.stringify(response))};const procs={processFileDiff:async function(data){let lineNumber=0,lineOld=0;const{added:added,removed:removed}=procs.parseGitDiff(data.fileDiff||"");let result={old:[],new:[]};if(void 0!==data.fileContent){let fileLines=data.fileContent.replace(/\r\n/g,"\n").split("\n");for(;lineNumber<fileLines.length;){let line=fileLines[lineNumber++];data.isCompare&&(void 0!==added[lineNumber]?void 0!==removed[lineOld+1]?(lineOld++,buildLine(result.old,removed[lineOld],lineOld,"danger")):buildLine(result.old,line," ",null,!0):(lineOld++,void 0!==removed[lineOld]&&(buildLine(result.old,removed[lineOld],lineOld,"danger"),lineOld++),buildLine(result.old,line,lineOld)));{let theme=void 0!==added[lineNumber]?"success":null;buildLine(result.new,line,lineNumber,theme)}}}function buildLine(array,line,lineNumber,theme,fill){let ln={lineNumber:lineNumber,line:line};theme&&(ln.background=`--color-${theme}`,ln.color=`--color-${theme}-offset`),fill&&(ln.isFiller=!0,ln.background="--color-warning",ln.color="#00000000"),array.push(ln)}return result},parseGitDiff:function(diffText){const added={},removed={},lines=diffText.split("\n");let oldLineNum=0,newLineNum=0;for(let i=0;i<lines.length;i++){const line=lines[i],hunkMatch=line.match(/^@@ -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@/);hunkMatch?(oldLineNum=parseInt(hunkMatch[1],10),newLineNum=parseInt(hunkMatch[2],10)):line.startsWith("+")&&!line.startsWith("+++")?(added[newLineNum]=line.slice(1),newLineNum++):line.startsWith("-")&&!line.startsWith("---")?(removed[oldLineNum]=line.slice(1),oldLineNum++):(oldLineNum++,newLineNum++)}return{added:added,removed:removed}}};
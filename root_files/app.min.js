"use strict";{const AsyncFunction=(async()=>{}).constructor,tauri=window.__TAURI__;delete window.__TAURI__;let firstLoad=!0;const defaultErrHandler=msg=>webui.alert(msg),cache={};let isLoadingDialog=null;function buildNav(projectNav){return projectNav.concat([{name:"Docs",icon:"star",url:"/docs",children:null},{name:"Navigation",icon:"star",url:"/nav-manager",children:null}])}async function showLoading(during){isLoadingDialog?"function"==typeof during&&during():(isLoadingDialog=webui.dialog({isLoading:!0}),"function"==typeof during&&(handler.constructor==AsyncFunction?await during():during(),hideLoading()))}function hideLoading(){isLoadingDialog&&(isLoadingDialog.close(),isLoadingDialog=null)}class Tauri{openUrl=tauri.opener.openUrl;constructor(){}async addProject(name,errHandler){errHandler??=defaultErrHandler;let result=await tauri.core.invoke("add_project",{name:name}).catch(errHandler);if(!result)return;let projects=await webui.proxy.getProjects().catch(errHandler)||[];return webui.setData("app-projects",projects),result}deleteSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("delete_securitykey",{}).catch(errHandler)}getAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_app_data",{}).catch(errHandler)}getProjectFile(filePath,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_project_file",{filePath:filePath}).catch(errHandler)}saveProjectFile(filePath,contents,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("save_project_file",{filePath:filePath,contents:contents}).catch(errHandler)}getProjectData(project,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_project_data",{project:project}).catch(errHandler)}getProjects(errHandler){return errHandler??=defaultErrHandler,firstLoad?(firstLoad=!1,tauri.core.invoke("load_projects",{}).catch(errHandler)):tauri.core.invoke("get_projects",{}).catch(errHandler)}hasSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("has_securitykey",{}).catch(errHandler)}saveAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("save_app_data",{data:webui.taskProxyData}).catch(errHandler)}saveProjectData(errHandler){if(errHandler??=defaultErrHandler,webui.projectData&&webui.projectData.id)return webui.setData("app-nav-routes",[]),webui.setData("app-nav-routes",buildNav(webui.projectData.navigation)),tauri.core.invoke("save_project_data",{data:webui.projectData}).catch(errHandler)}setSecurityKey(secKey,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("set_securitykey",{securityKey:secKey}).catch(errHandler)}syncProjectData(errHandler){if(errHandler??=defaultErrHandler,webui.projectData&&webui.projectData.id)return tauri.core.invoke("sync_project_data",{data:webui.projectData}).catch(errHandler)}}const ignoreAppDataFields=["app-api","app-name","app-company-singular","app-company-possessive","app-domain","webui-version","app-projects"];runWhenWebUIReady((async()=>{webui.isclosing=msg=>{webui.dialog({content:msg,isLoading:!0})},document.querySelector("dialog.isloading").remove(),webui._appSettings.isDesktopApp=!0,webui.proxy=new Tauri;let data=await webui.proxy.getAppData();webui.taskProxyData=data,webui.projectData={},Object.entries(data.data).forEach((([key,value])=>{-1===ignoreAppDataFields.indexOf(key)&&("page-path"===key?setTimeout((()=>handlePagePath(value)),100):webui.setData(key,value))})),webui.watchAppDataChanges(queueAppDataChanges);let currentProject=webui.getData("app-current-project");currentProject&&await loadProject({name:currentProject.display,path:currentProject.value}),hideLoading()}));let queueId="";const syncQueueTimeout=500;function handlePagePath(pagePath){let navTo="/root"===pagePath?"/":pagePath;location.pathname!==pagePath&&webui.navigateTo(navTo)}async function queueAppDataChanges(changes,appData){handleChanges(changes),handleUpdatedAppData(appData)}async function handleChanges(changes){switch(changes.property){case"page-path":webui.getData("app-current-project");webui.projectData.currentPage="/root"==changes.newValue?"/":changes.newValue,webui.proxy.syncProjectData();break;case"app-current-project":await loadProject({name:changes.newValue.display,path:changes.newValue.value})}}async function loadProject(project){if(cache.currentProject!==project){showLoading();try{await webui.proxy.saveProjectData(),webui.setData("app-nav-routes",[]);let projectData=await webui.proxy.getProjectData(project);webui.projectData=projectData||{navigation:[]},webui.setData("app-nav-routes",buildNav(webui.projectData.navigation)),handlePagePath(webui.projectData.currentPage||"/")}catch(ex){webui.alert(ex),handlePagePath("/")}finally{hideLoading()}}}async function handleUpdatedAppData(appData){let myId=webui.uuid(),oldId=queueId;queueId=myId,webui.taskProxyData.data=appData,""===oldId?(await syncAppData(),setTimeout((()=>{""!==queueId&&queueId===myId&&(queueId="")}),syncQueueTimeout)):setTimeout((async()=>{""!==queueId&&queueId!==myId||(await syncAppData(),""!==queueId&&queueId===myId&&(queueId=""))}),syncQueueTimeout)}async function syncAppData(){await tauri.core.invoke("sync_app_data",{data:webui.taskProxyData}).catch((msg=>webui.alert(msg)))}async function runWhenWebUIReady(action){try{await showLoading(),action()}catch{setTimeout((()=>runWhenWebUIReady(action)),10)}}}
"use strict";{const tauri=window.__TAURI__;delete window.__TAURI__;let firstLoad=!0;const defaultErrHandler=msg=>webui.alert(msg),cache={};class Tauri{openUrl=tauri.opener.openUrl;constructor(){}async addProject(name,errHandler){errHandler??=defaultErrHandler;let result=await tauri.core.invoke("add_project",{name:name}).catch(errHandler);if(!result)return;let projects=await webui.proxy.getProjects().catch(errHandler)||[];return webui.setData("app-projects",projects),result}deleteSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("delete_securitykey",{}).catch(errHandler)}getAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_app_data",{}).catch(errHandler)}getProjectData(project,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_project_data",{project:project}).catch(errHandler)}getProjects(errHandler){return errHandler??=defaultErrHandler,firstLoad?(firstLoad=!1,tauri.core.invoke("load_projects",{}).catch(errHandler)):tauri.core.invoke("get_projects",{}).catch(errHandler)}hasSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("has_securitykey",{}).catch(errHandler)}saveAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("save_app_data",{data:webui.taskProxyData}).catch(errHandler)}setSecurityKey(secKey,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("set_securitykey",{securityKey:secKey}).catch(errHandler)}}const ignoreAppDataFields=["app-api","app-name","app-company-singular","app-company-possessive","app-domain","webui-version","app-projects"];runWhenWebUIReady((async()=>{webui._appSettings.isDesktopApp=!0,webui.proxy=new Tauri;let data=await webui.proxy.getAppData();webui.taskProxyData=data,webui.projectData={},Object.entries(data.data).forEach((([key,value])=>{-1===ignoreAppDataFields.indexOf(key)&&(console.log("Load data",key,value),"page-path"===key?setTimeout((()=>handlePagePath(value)),100):webui.setData(key,value))})),webui.watchAppDataChanges(queueAppDataChanges);let currentProject=webui.getData("app-current-project");console.log("current project",currentProject),currentProject&&loadProject({name:currentProject.display,path:currentProject.value})}));let queueId="";const syncQueueTimeout=500;function handlePagePath(pagePath){let navTo="/root"===pagePath?"/":pagePath;webui.navigateTo(navTo)}async function queueAppDataChanges(changes,appData){handleChanges(changes),handleUpdatedAppData(appData)}async function handleChanges(changes){if("app-current-project"===changes.property)await loadProject({name:changes.newValue.display,path:changes.newValue.value})}async function loadProject(project){if(cache.currentProject===project)return;webui.setData("app-nav-routes",[]);let projectData=await webui.proxy.getProjectData(project);webui.projectData=projectData||{},console.log("Loaded project data",webui.projectData),console.log("nav",webui.projectData.navigation),webui.setData("app-nav-routes",webui.projectData.navigation)}async function handleUpdatedAppData(appData){let myId=webui.uuid(),oldId=queueId;queueId=myId,webui.taskProxyData.data=appData,""===oldId?(await syncAppData(),setTimeout((()=>{""!==queueId&&queueId===myId&&(queueId="")}),syncQueueTimeout)):setTimeout((async()=>{""!==queueId&&queueId!==myId||(await syncAppData(),""!==queueId&&queueId===myId&&(queueId=""))}),syncQueueTimeout)}async function syncAppData(){await tauri.core.invoke("sync_app_data",{data:webui.taskProxyData}).catch((msg=>webui.alert(msg)))}function runWhenWebUIReady(action){try{webui.isEqual(1,1),action()}catch{setTimeout((()=>runWhenWebUIReady(action)),10)}}}
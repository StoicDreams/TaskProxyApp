"use strict";{const AsyncFunction=(async()=>{}).constructor,tauri=window.__TAURI__;delete window.__TAURI__;let firstLoad=!0,isLoading={};const defaultErrHandler=msg=>webui.alert(msg),cache={};let isLoadingDialog=null;async function showLoading(during){isLoadingDialog?"function"==typeof during&&during():(isLoadingDialog=webui.dialog({isLoading:!0}),"function"==typeof during&&(handler.constructor==AsyncFunction?await during():during(),hideLoading()))}function hideLoading(){isLoadingDialog&&(isLoadingDialog.close(),isLoadingDialog=null)}class Tauri{openUrl=tauri.opener.openUrl;constructor(){}git={commit:async(repo,files,message,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("git_commit",{repo:repo,files:files,message:message}).catch(errHandler);if(result)return result},getChanges:async(path,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("get_git_changes",{path:path}).catch(errHandler);if(result)return result},getFileDiff:async(repo,file,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("get_git_file_diff",{repo:repo,file:file}).catch(errHandler);if(result)return result},getRepos:async(path,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("get_git_repos",{path:path}).catch(errHandler);if(result)return result},pull:async(repo,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("git_pull",{repo:repo}).catch(errHandler);if(result)return result},push:async(repo,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("git_push",{repo:repo}).catch(errHandler);if(result)return result},sync:async(repo,errHandler)=>{errHandler??=defaultErrHandler;let result=await tauri.core.invoke("git_sync",{repo:repo}).catch(errHandler);if(result)return result}};projects={isLoaded:!1,runWhenLoaded:async handler=>{for(;!webui.proxy.projects.isLoaded;)console.log("waiting for project to load"),await webui.wait(10);console.log("done waiting for project"),handler()}};async addProject(name,errHandler){errHandler??=defaultErrHandler;let result=await tauri.core.invoke("add_project",{name:name}).catch(errHandler);if(!result)return;let projects=await webui.proxy.getProjects().catch(errHandler)||[];return webui.setData("app-projects",projects),result}deleteSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("delete_securitykey",{}).catch(errHandler)}getAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_app_data",{}).catch(errHandler)}getProjectFile(filePath,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_project_file",{filePath:filePath}).catch(errHandler)}saveProjectFile(filePath,contents,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("save_project_file",{filePath:filePath,contents:contents}).catch(errHandler)}getProjectData(project,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("get_project_data",{project:project}).catch(errHandler)}async getProjects(errHandler){if(errHandler??=defaultErrHandler,firstLoad){firstLoad=!1,isLoading.projects=!0;let projects=await tauri.core.invoke("load_projects",{}).catch(errHandler);return delete isLoading.projects,projects}{let counter=0;for(;counter++<1e3&&isLoading.projects;)await webui.wait(10);return await tauri.core.invoke("get_projects",{}).catch(errHandler)}}hasSecurityKey(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("has_securitykey",{}).catch(errHandler)}saveAppData(errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("save_app_data",{data:webui.taskProxyData}).catch(errHandler)}saveProjectData(errHandler){if(errHandler??=defaultErrHandler,webui.projectData&&webui.projectData.id)return webui.setData("app-nav-routes",[]),webui.setData("app-nav-routes",webui.projectData.navigation),tauri.core.invoke("save_project_data",{data:webui.projectData}).catch(errHandler)}setSecurityKey(secKey,errHandler){return errHandler??=defaultErrHandler,tauri.core.invoke("set_securitykey",{securityKey:secKey}).catch(errHandler)}syncProjectData(errHandler){if(errHandler??=defaultErrHandler,webui.projectData&&webui.projectData.id)return tauri.core.invoke("sync_project_data",{data:webui.projectData}).catch(errHandler)}}const ignoreAppDataFields=["app-api","app-name","app-company-singular","app-company-possessive","app-domain","webui-version","app-projects"];runWhenWebUIReady((async()=>{webui.isclosing=msg=>{webui.dialog({content:msg,isLoading:!0})},document.querySelector("dialog.isloading").remove(),webui._appSettings.isDesktopApp=!0,webui.proxy=new Tauri;let data=await webui.proxy.getAppData();webui.taskProxyData=data,webui.projectData={},Object.entries(data.data).forEach((([key,value])=>{-1===ignoreAppDataFields.indexOf(key)&&("page-path"===key?setTimeout((()=>handlePagePath(value)),100):webui.setData(key,value))})),webui.watchAppDataChanges(queueAppDataChanges);let currentProject=webui.getData("app-current-project");currentProject&&await loadProject({name:currentProject.display,path:currentProject.value}),hideLoading()}));let queueId="";const syncQueueTimeout=500;function handlePagePath(pagePath){let navTo="/root"===pagePath?"/":pagePath;location.pathname!==pagePath&&webui.navigateTo(navTo)}async function queueAppDataChanges(changes,appData){handleChanges(changes),handleUpdatedAppData(appData)}async function handleChanges(changes){switch(changes.property){case"page-path":webui.getData("app-current-project");webui.projectData.currentPage="/root"==changes.newValue?"/":changes.newValue,webui.proxy.syncProjectData();break;case"app-current-project":await loadProject({name:changes.newValue.display,path:changes.newValue.value})}}async function loadProject(project){if(cache.currentProject!==project){showLoading();try{await webui.proxy.saveProjectData(),webui.setData("app-nav-routes",[]);let projectData=await webui.proxy.getProjectData(project);webui.projectData=projectData||{navigation:[]},webui.proxy.projects.isLoaded=!!webui.projectData.id,webui.setData("app-nav-routes",webui.projectData.navigation);let startPage=webui.projectData.currentPage||"/";webui.navigateTo("/"),setTimeout((()=>{handlePagePath(startPage)}),300)}catch(ex){webui.alert(ex),handlePagePath("/")}finally{hideLoading()}}}async function handleUpdatedAppData(appData){let myId=webui.uuid(),oldId=queueId;queueId=myId,webui.taskProxyData.data=appData,""===oldId?(await syncAppData(),setTimeout((()=>{""!==queueId&&queueId===myId&&(queueId="")}),syncQueueTimeout)):setTimeout((async()=>{""!==queueId&&queueId!==myId||(await syncAppData(),""!==queueId&&queueId===myId&&(queueId=""))}),syncQueueTimeout)}async function syncAppData(){await tauri.core.invoke("sync_app_data",{data:webui.taskProxyData}).catch((msg=>webui.alert(msg)))}async function runWhenWebUIReady(action){try{await showLoading(),action()}catch{setTimeout((()=>runWhenWebUIReady(action)),10)}}}function getDragNDropSetup(getSegments){return(segment,onSet)=>{if(segment._isDNDEnabled)return;segment._isDNDEnabled=!0;let canStart=!1,ismoving=!1,mouseisdown=!1,offsetX=0,offsetY=0,placeholder=webui.create("div",{class:"placeholder",theme:"success",moving:!0}),segments=[];function onMove(ev){if(mouseisdown){if(ev.preventDefault(),ev.stopPropagation(),ismoving){let left=ev.clientX-offsetX,top=ev.clientY-offsetY;segment.style.left=`${left}px`,segment.style.top=`${top}px`;let closest=null,minDistance=1/0,aboveOrBelow=null;return segments.forEach((el=>{if(el===segment)return;const rect=el.getBoundingClientRect(),centerY=rect.top+rect.height/2,distance=Math.abs(ev.clientY-centerY);distance<minDistance&&(minDistance=distance,closest=el,aboveOrBelow=closest.getAttribute("place")||(ev.clientY<centerY?"above":"below"))})),void(closest&&("below"===aboveOrBelow?closest.after(placeholder):closest.before(placeholder)))}canStart&&(ismoving=!0,canStart=!1,document.body.classList.add("dragging"),segment.style.width=`${segment.clientWidth}px`,segment.style.height=`${segment.clientHeight}px`,segment.classList.add("moving"),segment.after(placeholder),document.getSelection?document.getSelection().empty():window.getSelection&&window.getSelection().removeAllRanges())}}function onRemove(ev){mouseisdown=!1,ismoving=!1,canStart=!1,placeholder.after(segment),"function"==typeof onSet&&onSet(),document.removeEventListener("mousemove",onMove),document.removeEventListener("mouseup",onRemove),segment.classList.remove("moving"),segment.style.left="",segment.style.top="",segment.style.width="",segment.style.height="",placeholder.remove(),document.body.classList.remove("dragging")}segment.addEventListener("mousedown",(ev=>{if(1!==ev.buttons||mouseisdown)return;const target=webui.closest(ev,".drag-handle");if(!target)return;ev.preventDefault(),ev.stopPropagation(),mouseisdown=!0;let cs=segment.getClientRects()[0];offsetX=ev.clientX-cs.x,offsetY=ev.clientY-cs.y,setTimeout((()=>{mouseisdown&&(segments=getSegments(target),canStart=!0)}),200),document.addEventListener("mousemove",onMove),document.addEventListener("mouseup",onRemove,{once:!0})}))}}
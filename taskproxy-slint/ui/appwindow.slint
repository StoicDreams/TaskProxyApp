import { Button, VerticalBox , HorizontalBox} from "std-widgets.slint";
import { MarkdownItem, MarkdownContent } from "./markdown_content.slint";

@rust-attr(derive(serde::Serialize, serde::Deserialize))
export enum Position {
    Top,
    Right,
    Bottom,
    Left
}

export global UserSettings {
    in-out property<Position> menu: Position.Left;
    in-out property<int> padding: 10;
    in-out property<int> spacing: 10;
    in-out property<int> fontSize: 16;
}

component HorizontalMenu inherits HorizontalBox {
    height: 20px;
    padding: 0;
    spacing: UserSettings.spacing * 1px;
    Rectangle {
        padding: UserSettings.padding * 1px;
    }
    Rectangle {
        padding: UserSettings.padding * 1px;
        Text {
            width: 100%;
            font-size: UserSettings.fontSize * 1px;
            text: "Menu";
            horizontal-alignment: center;
        }
    }
    Rectangle {
        padding: UserSettings.padding * 1px;
    }
}

component VerticalMenu inherits VerticalBox {
    padding: 0;
    spacing: UserSettings.spacing * 1px;
    Rectangle {
        padding: UserSettings.padding * 1px;
        Text {
            width: 100%;
            font-size: 16px;
            text: "Menu";
            horizontal-alignment: center;
        }
    }
    Rectangle {
        padding: UserSettings.padding * 1px;
    }
    Rectangle {
        padding: UserSettings.padding * 1px;
    }
}

export component AppWindow inherits Window {
    in property<[MarkdownItem]> page_content <=> dc.content;
    title: "Task Proxy - Stoic Dreams";
    icon: @image-url("../img/Logo-32.png");
    background: @linear-gradient(10deg, #270027 0, #860086 100);
    min-width: 400px;
    min-height: 400px;
    padding: 0;
    default-font-size: 14px;
    HorizontalBox {
        padding: 0;
        spacing: UserSettings.spacing * 1px;
        if UserSettings.menu == Position.Left : VerticalMenu {}
        VerticalBox {
            padding: 0;
            spacing: UserSettings.spacing * 1px;
            horizontal-stretch: 1;
            if UserSettings.menu == Position.Top : HorizontalMenu {}
            dc := MarkdownContent {}
            if UserSettings.menu == Position.Bottom : HorizontalMenu {}
        }
        if UserSettings.menu == Position.Right : VerticalMenu {}
    }
}